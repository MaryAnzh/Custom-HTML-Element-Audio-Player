{"version":3,"file":"main.js","mappings":"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","sources":["webpack://audio_player/./src/service/control.ts","webpack://audio_player/./src/view/components/nav/nav.ts","webpack://audio_player/./src/view/components/header/header.ts","webpack://audio_player/./src/view/components/footer/footer.ts","webpack://audio_player/./src/view/pages/main/main.ts","webpack://audio_player/./src/view/pages/about/about.ts","webpack://audio_player/./src/view/pages/not-found/not-found.ts","webpack://audio_player/./src/service/translator/en.ts","webpack://audio_player/./src/service/translator/ru.ts","webpack://audio_player/./src/service/translator/by.ts","webpack://audio_player/./src/service/translator/translator.ts","webpack://audio_player/./src/view/app.ts","webpack://audio_player/./src/view/components/audio-player/audio-player.ts","webpack://audio_player/./src/index.ts","webpack://audio_player/./src/view/app-router .ts"],"sourcesContent":["\r\ninterface IAtr {\r\n    name: string,\r\n    value: string,\r\n}\r\n\r\nexport class Control {\r\n    public node;\r\n\r\n    constructor(perentNode: HTMLElement, tagName: string = 'div', className: string | string[] = '', content: string = '', atr: IAtr[] | null = null) {\r\n        const element = document.createElement(tagName);\r\n        if (Array.isArray(className)) {\r\n            className.forEach(name => element.classList.add(name));\r\n        }\r\n        if (typeof className === 'string') {\r\n            element.className = className;\r\n        }\r\n        element.textContent = content;\r\n        if (perentNode) {\r\n            perentNode.append(element);\r\n        }\r\n        if (atr) {\r\n            atr.forEach(el => element.setAttribute(el.name, el.value));\r\n        }\r\n        this.node = element;\r\n    }\r\n\r\n    destroy() {\r\n        this.node.remove();\r\n    }\r\n}","import { Control } from \"../../../service/control\";\r\nimport { IElementTranslate } from '../../../interfaces/translator.interfaces';\r\n\r\n\r\nexport class Nav extends Control {\r\n    private _ul: Control;\r\n    private _navLists: { name: string, key: string }[] = [\r\n        { name: 'main', key: 'MAIN' },\r\n        { name: 'about', key: 'ABOUT' },\r\n    ];\r\n    private perentKey = 'NAV';\r\n\r\n    public navItems: IElementTranslate[] = [];\r\n\r\n    constructor() {\r\n        super(null, 'nav', 'nav');\r\n\r\n        this._ul = new Control(this.node, 'ul', 'nav__list', '', null);\r\n        this._navLists.forEach((el, i) => {\r\n            const li = new Control(this._ul.node, 'li', 'nav__list__item', '', null);\r\n            const link = i === 0 ? '#/' : `#/${el.name}`;\r\n            const a = new Control(li.node, 'a', 'nav__list__item__link', '', [{ name: 'href', value: link }]);\r\n            this.navItems.push({ element: a.node, perentKey: this.perentKey, elementKey: el.key });\r\n        });\r\n    }\r\n\r\n    translate(config: any): void {\r\n        this.navItems.forEach((el) => {\r\n            const text = config[el.perentKey][el.elementKey];\r\n            el.element.textContent = text;\r\n        });\r\n    }\r\n}","import { IElementTranslate } from '../../../interfaces/translator.interfaces';\r\nimport { Control } from '../../../service/control';\r\nimport { Nav } from '../nav/nav'\r\n\r\nexport class Header extends Control {\r\n    private container: Control;\r\n    private _nav: Nav;\r\n    public navItems: IElementTranslate[] = [];\r\n\r\n    private langsWrap: Control;\r\n    private langs: string[];\r\n    public langItems: [];\r\n    public onChange: (lang: string) => void;\r\n\r\n    constructor(langs: string[]) {\r\n        super(null, 'header', 'header');\r\n        this.langs = langs;\r\n\r\n        this.container = new Control(this.node, 'div', 'container');\r\n        this._nav = new Nav();\r\n        this.navItems = this._nav.navItems;\r\n        this.container.node.appendChild(this._nav.node);\r\n\r\n        this.langsWrap = new Control(this.container.node, 'div', 'container__langs');\r\n        this.langs.forEach((lang, i) => {\r\n            const container = new Control(this.langsWrap.node, 'div', 'header__langs__item');\r\n            const check = i === 0 ? 'true' : 'false';\r\n\r\n            const input = new Control(container.node, 'input', 'header__langs__item__input', '',\r\n                [\r\n                    { name: 'name', value: 'lang' },\r\n                    { name: 'id', value: `${lang}` },\r\n                    { name: 'type', value: 'radio' }]);\r\n\r\n            input.node.onchange = () => this.onChange(lang);\r\n            if (i === 0) {\r\n                const checkedInput = <HTMLInputElement>input.node;\r\n                checkedInput.checked = true;\r\n            }\r\n\r\n            const label = new Control(container.node, 'label', 'header__langs__item__label', lang,\r\n                [{ name: 'for', value: `${lang}` },]);\r\n        });\r\n    }\r\n\r\n    translate(config: any): void {\r\n        this._nav.translate(config);\r\n    }\r\n\r\n    selectCurrentPage(pageName: string) {\r\n        this.navItems.forEach(item => item.element.classList.remove('active'));\r\n        switch (pageName) {\r\n            case '/':\r\n                this.navItems[0].element.classList.add('active');\r\n                break;\r\n            case '/about':\r\n                this.navItems[1].element.classList.add('active');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}","\r\nexport class Footer {\r\n    public node: Element;\r\n    constructor() {\r\n        this.node = document.createElement('footer');\r\n        this.node.classList.add('footer');\r\n        this.node.textContent = 'footer';\r\n    }\r\n}","import { Control } from \"../../../service/control\";\r\n\r\nexport class Main extends Control {\r\n    public name: string = 'main-page';\r\n    private perentKey = 'MAIN';\r\n\r\n    private title: Control;\r\n    private audio: Control;\r\n\r\n    constructor() {\r\n        super(null, 'div', ['main-page', 'page']);\r\n\r\n        this.title = new Control(this.node, 'h2', `main-page__title`, 'Custom HTML Element');\r\n        this.audio = new Control(this.node, 'audio-player', 'main-page__audio-player', '', [{ name: 'playButtonSize', value: '20' }]);\r\n    }\r\n\r\n    translate(config: any): void {\r\n        this.title.node.textContent = config[this.perentKey]['TITLE'];\r\n    }\r\n\r\n    destroy: () => void = () => {\r\n        this.node.remove();\r\n    };\r\n}","import { Control } from \"../../../service/control\";\r\n\r\nexport class About extends Control {\r\n    public name: string = 'about-page';\r\n\r\n    private _title: Control;\r\n\r\n    constructor() {\r\n        super(null, 'div', ['about-page', 'page']);\r\n\r\n        this._title = new Control(this.node, 'h2', 'about-page__title', this.name, null);\r\n    }\r\n\r\n\r\n    translate(config: any): void {\r\n    }\r\n\r\n    destroy: () => void = () => {\r\n        this.node.remove();\r\n    };\r\n}","import { Control } from \"../../../service/control\";\r\n\r\nexport class NotFound extends Control {\r\n    public name: string = 'not-found-page';\r\n\r\n    private _title: Control;\r\n\r\n    constructor() {\r\n        super(null, 'div', ['not-found', 'page']);\r\n        this._title = new Control(this.node, 'h2', `${this.name}__title`, this.name);\r\n    }\r\n\r\n    translate(config: any): void {\r\n    }\r\n\r\n    destroy: () => void = () => {\r\n        this.node.remove();\r\n    };\r\n}","export const en = {\r\n    NAV: {\r\n        MAIN: 'main',\r\n        ABOUT: 'about'\r\n    },\r\n    MAIN: {\r\n        TITLE: 'Custom HTML Element'\r\n    }\r\n};","export const ru = {\r\n    NAV: {\r\n        MAIN: 'главная',\r\n        ABOUT: 'о проекте',\r\n    },\r\n    MAIN: {\r\n        TITLE: 'Пользовательский HTML элемент'\r\n    }\r\n};","export const by = {\r\n    NAV: {\r\n        MAIN: 'галоўная',\r\n        ABOUT: 'аб праекце'\r\n    },\r\n    MAIN: {\r\n        TITLE: 'Спецыялізаваны элемент кіравання'\r\n    },\r\n};","import { en } from \"./en\";\r\nimport { ru } from './ru';\r\nimport { by } from './by';\r\n\r\nclass Translator {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    translate(lang: string) {\r\n        switch (lang) {\r\n            case 'ru':\r\n                return ru;\r\n            case 'by':\r\n                return by;\r\n            default:\r\n                return en;\r\n        }\r\n    }\r\n}\r\n\r\nexport const translator = new Translator();","import { Control } from '../service/control';\r\nimport { Header } from './components/header/header';\r\nimport { Footer } from './components/footer/footer';\r\nimport { Main } from './pages/main/main';\r\nimport { About } from './pages/about/about';\r\nimport { NotFound } from './pages/not-found/not-found';\r\nimport { translator } from '../service/translator/translator';\r\n\r\nclass App extends Control {\r\n    private header: Header;\r\n    private footer: Footer;\r\n    public main: Control;\r\n    private currentPage: Main | About | NotFound | null = null;\r\n    private lang: string;\r\n\r\n    constructor() {\r\n        super(document.body, 'div', 'wrapper');\r\n\r\n        const langs = ['en', 'ru', 'by'];\r\n        this.lang = 'en';\r\n        this.header = new Header(langs);\r\n        this.footer = new Footer();\r\n        this.main = new Control(null, 'main', 'main', '', null);\r\n        this.node.append(this.header.node, this.main.node, this.footer.node);\r\n\r\n        this.header.onChange = (lang) => {\r\n            this.translate(lang);\r\n            this.lang = lang;\r\n        };\r\n    }\r\n\r\n    addPage(page: string) {\r\n        this.header.selectCurrentPage(page);\r\n        let newPage: Main | About | NotFound | null = null;\r\n\r\n        switch (page) {\r\n            case '/':\r\n                newPage = new Main();\r\n                break;\r\n\r\n            case '/about':\r\n                newPage = new About();\r\n                break;\r\n            default:\r\n                newPage = new NotFound();\r\n                break;\r\n        }\r\n\r\n        this.currentPage = newPage;\r\n        this.main.node.appendChild(newPage.node);\r\n        this.translate(this.lang);\r\n    }\r\n\r\n    removePage() {\r\n        if (this.currentPage !== null) {\r\n            this.currentPage.destroy();\r\n        }\r\n    }\r\n\r\n    translate = (lang: string): void => {\r\n        const langObj = translator.translate(lang);\r\n        this.header.translate(langObj);\r\n        if (this.currentPage) {\r\n            this.currentPage.translate(langObj);\r\n        }\r\n    }\r\n}\r\n\r\nexport const app = new App();","import { Control } from '../../../service/control';\r\n\r\nexport class AudioPlayerCustomHTML extends HTMLElement {\r\n    private audio = new Audio();\r\n    private container: Control;\r\n    private controls: Control;\r\n    private playButton: Control;\r\n    private timeBar: Control;\r\n    private timeBarTimer: Control;\r\n    private timeBarAudioTime: Control;\r\n    private soundBar: Control;\r\n    private playList: Control;\r\n    isPlay = false;\r\n\r\n    static observedAttributes = [\r\n        'playButtonSize',\r\n    ];\r\n\r\n    get playButtonSize(): number {\r\n        return +this.getAttribute('playButtonSize');\r\n    }\r\n\r\n    set playButtonSize(value: number) {\r\n        this.setAttribute('playButtonSize', value.toString());\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.audio.src = 'assets/audio/Christmas_Time_-_Jingle_Bell_Rock_(musmore.com).mp3';\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.container = new Control(this, 'section', 'audio-player');\r\n        this.controls = new Control(this.container.node, 'div', 'audio-player__controls');\r\n        this.playButton = new Control(this.controls.node, 'button', 'audio-player__controls__button', '+');\r\n        this.playButton.node.onclick = () => this.play();\r\n        this.timeBar = new Control(this.controls.node, 'div', 'audio-player__controls__time-bar');\r\n        this.soundBar = new Control(this.controls.node, 'div', 'audio-player__controls__sound-bar');\r\n        this.playList = new Control(this.container.node, 'div', 'audio-player__play-list');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // браузер вызывает этот метод при удалении элемента из документа\r\n        // (может вызываться много раз, если элемент многократно добавляется/удаляется)\r\n    }\r\n\r\n    attributeChangedCallback(name: any, oldValue: any, newValue: any) {\r\n\r\n    }\r\n\r\n    update() { }\r\n\r\n    play() {\r\n        if (this.isPlay) {\r\n            this.audio.pause();\r\n        } else {\r\n            this.audio.play();\r\n        }\r\n        this.isPlay = !this.isPlay;\r\n    }\r\n}","\"use strict\";\r\n\r\nimport './assets/style/style.scss';\r\nimport { app } from './view/app';\r\nimport { AppRouter } from './view/app-router ';\r\nimport { AudioPlayerCustomHTML } from './view/components/audio-player/audio-player';\r\n\r\ncustomElements.define(\"audio-player\", AudioPlayerCustomHTML);\r\n\r\nconst routes: string[] = [\r\n    '/',\r\n    '/about'\r\n];\r\n\r\nlet currentPage: string | null = null;\r\n\r\nconst appRoute = new AppRouter(routes);\r\n\r\nconst onloadPage = () => {\r\n    const page = appRoute.route();\r\n    currentPage = page;\r\n    app.addPage(page);\r\n}\r\n\r\nconst onloadApp = () => {\r\n    app;\r\n    onloadPage();\r\n}\r\n\r\nwindow.onload = () => onloadApp();\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n    app.removePage();\r\n    onloadPage();\r\n});","import { NotFound } from './pages/not-found/not-found'\r\n\r\nexport type Request = {\r\n    resource: string | null, id: string | null, verb: string | null\r\n}\r\n\r\nexport class AppRouter {\r\n    public routes: string[];\r\n    public notFound: NotFound;\r\n\r\n    constructor(routes: string[]) {\r\n        this.routes = routes;\r\n        this.notFound = new NotFound();\r\n    }\r\n\r\n    route = (): string => {\r\n        const pageName = this.parseRequestURL();\r\n        const page = this.routes.filter((el: string): boolean => el == pageName)[0];\r\n        return page;\r\n    }\r\n\r\n    parseRequestURL = (): string => {\r\n        let url = location.hash.slice(1).toLowerCase() || '/';\r\n        let r = url.split(\"/\")\r\n\r\n        let request: Request = {\r\n            resource: null,\r\n            id: null,\r\n            verb: null\r\n        }\r\n\r\n        request.resource = r[1];\r\n        request.id = r[2];\r\n        request.verb = r[3];;\r\n        let parsedURL = (request.resource ? '/' + request.resource : '/') + (request.id ? '/:id' : '') + (request.verb ? '/' + request.verb : '')\r\n        return parsedURL;\r\n    }\r\n}"],"names":["Control","constructor","perentNode","tagName","className","content","atr","element","document","createElement","Array","isArray","forEach","name","classList","add","textContent","append","el","setAttribute","value","this","node","destroy","remove","Nav","super","_navLists","key","perentKey","navItems","_ul","i","li","link","a","push","elementKey","translate","config","text","Header","langs","container","_nav","appendChild","langsWrap","lang","input","onchange","onChange","checked","selectCurrentPage","pageName","item","Footer","Main","title","audio","About","_title","NotFound","en","NAV","MAIN","ABOUT","TITLE","ru","by","translator","app","body","currentPage","langObj","header","footer","main","addPage","page","newPage","removePage","AudioPlayerCustomHTML","HTMLElement","Audio","isPlay","src","playButtonSize","getAttribute","toString","connectedCallback","controls","playButton","onclick","play","timeBar","soundBar","playList","disconnectedCallback","attributeChangedCallback","oldValue","newValue","update","pause","observedAttributes","customElements","define","appRoute","routes","route","parseRequestURL","filter","r","location","hash","slice","toLowerCase","split","request","resource","id","verb","notFound","onloadPage","window","onload","addEventListener"],"sourceRoot":""}